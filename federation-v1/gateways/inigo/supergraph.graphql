# Generated by Inigo CLI

schema
  @link(for: EXECUTION, url: "https://specs.apollo.dev/join/v0.2")
  @link(url: "https://specs.apollo.dev/link/v1.0") {
  query: Query
}

scalar join__FieldSet
scalar link__Import

enum join__Graph {
  ACCOUNTS @join__graph(name: "accounts", url: "http://accounts:4001/graphql")
  INVENTORY
    @join__graph(name: "inventory", url: "http://inventory:4002/graphql")
  PRODUCTS @join__graph(name: "products", url: "http://products:4003/graphql")
  REVIEWS @join__graph(name: "reviews", url: "http://reviews:4004/graphql")
}
enum link__Purpose {
  """
  `EXECUTION` features provide metadata necessary for operation execution.
  """
  EXECUTION
  """
  `SECURITY` features provide metadata necessary to securely resolve fields.
  """
  SECURITY
}

type Product
  @join__type(extension: true, graph: INVENTORY, key: "upc")
  @join__type(extension: true, graph: REVIEWS, key: "upc")
  @join__type(graph: PRODUCTS, key: "upc") {
  inStock: Boolean @join__field(graph: INVENTORY)
  name: String @join__field(graph: PRODUCTS)
  price: Int
    @join__field(external: true, graph: INVENTORY)
    @join__field(graph: PRODUCTS)
  reviews: [Review] @join__field(graph: REVIEWS)
  shippingEstimate: Int @join__field(graph: INVENTORY, requires: "price weight")
  upc: String!
  weight: Int
    @join__field(external: true, graph: INVENTORY)
    @join__field(graph: PRODUCTS)
}
type Query
  @join__type(graph: ACCOUNTS)
  @join__type(graph: INVENTORY)
  @join__type(graph: PRODUCTS)
  @join__type(graph: REVIEWS) {
  me: User @join__field(graph: ACCOUNTS)
  topProducts(first: Int = 5): [Product] @join__field(graph: PRODUCTS)
  user(id: ID!): User @join__field(graph: ACCOUNTS)
  users: [User] @join__field(graph: ACCOUNTS)
}
type Review @join__type(graph: REVIEWS, key: "id") {
  author: User @join__field(graph: REVIEWS, provides: "username")
  body: String
  id: ID!
  product: Product
}
type User
  @join__type(extension: true, graph: REVIEWS, key: "id")
  @join__type(graph: ACCOUNTS, key: "id") {
  birthday: Int @join__field(graph: ACCOUNTS)
  id: ID!
  name: String @join__field(graph: ACCOUNTS)
  reviews: [Review] @join__field(graph: REVIEWS)
  username: String
    @join__field(external: true, graph: REVIEWS)
    @join__field(graph: ACCOUNTS)
}

directive @join__field(
  external: Boolean
  graph: join__Graph!
  override: String
  provides: join__FieldSet
  requires: join__FieldSet
  type: String
  usedOverridden: Boolean
) repeatable on FIELD_DEFINITION | INPUT_FIELD_DEFINITION

directive @join__graph(name: String!, url: String!) on ENUM_VALUE

directive @join__implements(
  graph: join__Graph!
  interface: String!
) repeatable on OBJECT | INTERFACE

directive @join__type(
  extension: Boolean! = false
  graph: join__Graph!
  key: join__FieldSet
  resolvable: Boolean! = true
) repeatable on OBJECT | INTERFACE | UNION | ENUM | INPUT_OBJECT | SCALAR

directive @link(
  as: String
  for: link__Purpose
  import: [link__Import]
  url: String
) repeatable on SCHEMA
